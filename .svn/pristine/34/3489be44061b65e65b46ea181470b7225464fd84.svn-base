using Dao;
using Model;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using System.Web;
using System.Web.Mvc;

namespace HR.Controllers
{
    //客户化设置
    public class ClientController : Controller
    {
        //一级机构设值Dao
        config_file_first_kindDao leveldao=new config_file_first_kindDao();
        //二级机构设置Dao
        config_file_second_kindDao leve2dao=new config_file_second_kindDao();
        //三级机构设置Dao
        config_file_third_kindDao leve3dao = new config_file_third_kindDao();
        //人力资源档案管理设置
        //Ⅰ级机构设置
        public ActionResult Leve1()
        {
            return View();
        }
        //一级机构设置的查询所有数据
        public async Task<ActionResult> Leve1Find() 
        {
           IEnumerable<config_file_first_kind> list= await leveldao.FindAsync();
            return Json(list, JsonRequestBehavior.AllowGet);
        }
        //Ⅰ级机构设置添加视图
        public ActionResult Leve1Select()
        {
            return View();
        }
        //1级机构设置添加
        public async Task<ActionResult> Leve1SelectZX(config_file_first_kind t)
        {
           int dore=await leveldao.SelectAsync(t);
            if (dore == 1)
            {
                return Content("1");
            }
            else
            {
                return Content("2");
            }
        }
        //1级机构设置删除
        public async Task<ActionResult> Leve1Delect(string No)
        {
            int dore = await leveldao.DelectAsync(No);
            if (dore == 1)
            {
                return Content("1");
            }
            else
            {
                return Content("2");
            }
        }
        //一级机构设置修改视图
        public async Task<ActionResult> Leve1Update(string obj)
        {
            config_file_first_kind leve1=await leveldao.FindIDAsync(obj);
            ViewBag.s=leve1;
            return View();
        }
        //1级机构设置修改
        public async Task<ActionResult> Leve1UpdateZX(config_file_first_kind t)
        {
            int dore = await leveldao.UpdateAsync(t);
            if (dore == 1)
            {
                return Content("1");
            }
            else
            {
                return Content("2");
            }
        }
        //二
        //二级机构设置
        public ActionResult Leve2()
        {
            return View();
        }
        //显示二级机构设置所有数据
        public async Task<ActionResult> Leve2Find()
        {
            IEnumerable<config_file_second_kind> list =await leve2dao.FindAsync();
            return Json(list, JsonRequestBehavior.AllowGet);
        }
        //二级添加视图
        public async Task<ActionResult> Leve2Select()
        {
            IEnumerable<config_file_first_kind> list =await leveldao.FindName();
            ViewBag.s=list;
            return View();
        }
        //二级添加
        public async Task<ActionResult> Leve2Add(config_file_second_kind c)
        {
            int dore=await leve2dao.SelectAsync(c);
            return Content(dore.ToString());
        }
        //二级删除
        public async Task<ActionResult> Leve2Del(string No)
        {
            int dore = await leve2dao.DeleteAsync(No);
            return Content(dore.ToString());
        }
        //二级修改视图
        public async Task<ActionResult> Leve2UpdateView(string obj)
        {
            config_file_second_kind leve1 = await leve2dao.FindIDAsync(obj);
            ViewBag.s = leve1;
            return View();
        }
        //二级修改
        public async Task<ActionResult> Leve2Update(config_file_second_kind c)
        {
            int dore = await leve2dao.UpdateAsync(c);
            return Content(dore.ToString());
        }
        //
        //三级机构设置视图
        public ActionResult Leve3()
        {
            return View();
        }
        //三级机构设置查询全部数据
        public async Task<ActionResult> Leve3Find()
        {
            IEnumerable<config_file_third_kind> list =await leve3dao.FindAsync();
            return Json(list, JsonRequestBehavior.AllowGet);
        }
        //三级机构设置添加视图
        public async Task<ActionResult> Leve3Select()
        {
            IEnumerable<config_file_first_kind> list = await leveldao.FindName();
            ViewBag.s = list;
            return View();
        }
        //根据一级编号查询二级名称
        public async Task<ActionResult> Leve3IIIFind(string Iid)
        {
            
            IEnumerable<config_file_second_kind> list =await leve2dao.FindIidAsync(Iid);
            int a = 0;
            return Json(list, JsonRequestBehavior.AllowGet);
        }
        //三级机构添加
        public async Task<ActionResult> Leve3Insert(config_file_third_kind c)
        {
            int dore = await leve3dao.InsertAsyns(c);
            return Content(dore.ToString());
        }
        //三级机构删除
        public async Task<ActionResult> Leve3Del(string No)
        {
            int dore = await leve3dao.DeleteAsync(No);
            return Content(dore.ToString());
        }
        //三级机构修改视图
        public async Task<ActionResult> Leve3UpdateView(string No)
        {
            config_file_third_kind leve3 = await leve3dao.FindIDAsync(No);
            ViewBag.s = leve3;
            return View();
        }
        //三级机构修改
        public async Task<ActionResult> Leve3Update(config_file_third_kind f)
        {
            int dore = await leve3dao.UpdateAsync(f);
            return Content(dore.ToString());
        }
    }
}