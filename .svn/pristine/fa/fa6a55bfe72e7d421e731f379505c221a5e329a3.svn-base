
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>query_view</title>
    <script src="~/Scripts/vue/dist/vue.js"></script>
    <script src="~/Scripts/javascript/jquery-1.7.2.js"></script>
    <script src="~/Scripts/element-ui/lib/index.js"></script>
    <link href="~/Scripts/element-ui/lib/theme-chalk/index.css" rel="stylesheet" />
    <script src="~/Scripts/axios/dist/axios.js"></script>
    <link href="~/Scripts/css/table.css" rel="stylesheet" />
    <script src="~/Scripts/javascript/echarts.min.js"></script>
</head>
<body>
    <div id="app">
        <table width="100%">
            <tr>
                <td style="text-align: left">
                    <font color="black">您正在做的业务是:人力资源管理--薪酬发放管理--薪酬发放查询</font>
                    <br><br><br>
                </td>
            </tr>

            <tr>
                <td colspan="2" style="text-align: left">
                    薪酬单编号：{{ssid}}
                </td>
            </tr>
            <tr>
                <td colspan="2" style="text-align: left">
                    机构：
                    {{leve}}级结构
                </td>
            </tr>
            <tr>
                <td style="text-align: left">
                    本机构总人数:{{SGDList.length}}
                    ，基本薪酬总数:{{xmoney}}
                    ，实发总额:<span id="salarySum_sum">{{smoney}}.0</span>

                </td>
                <td style="text-align: right">
                    登记人:{{name}}
                    登记时间： {{time |ftime}}
                </td>
            </tr>
        </table>
        <table width="100%" border="1" cellpadding=0 cellspacing=1
               bordercolorlight=#848284 bordercolordark=#eeeeee
               class="TABLE_STYLE1">

            <tr>
                <td class="TD_STYLE1">
                    <span>序号</span>
                </td>
                <td class="TD_STYLE1">
                    <span>档案编号</span>
                </td>
                <td class="TD_STYLE1">
                    <span>姓名</span>
                </td>

                <td class="TD_STYLE1">
                    薪资基本明细
                </td>

                <td class="TD_STYLE1" width="7%">
                    奖励金额
                </td>
                <td class="TD_STYLE1" width="7%">
                    销售绩效总额
                </td>
                <td class="TD_STYLE1" width="7%">
                    应扣金额
                </td>
                <td class="TD_STYLE1" width="7%">
                    实发金额
                </td>
            </tr>

            <tr class="TD_STYLE2" v-for="(item,index) in SGDList">
                <td>
                    {{index + 1}}
                </td>
                <td>
                    {{item.human_id}}
                </td>
                <td>
                    {{item.human_name}}
                </td>
                <td>
                    <a href="#" v-on:click="CKSSD()">详细类容</a>
                </td>

                <td>
                    {{item.bouns_sum}}
                </td>
                <td>
                    {{item.sale_sum}}
                </td>
                <td>
                    {{item.deduct_sum}}
                </td>
                <td>
                    {{item.salary_paid_sum}}
                </td>

            </tr>
        </table>
        <br>
        <input type="button" style="width: 200;height: 50;font-size: 20px;font-weight: bold;border-bottom-style: ridge;cursor: pointer" onclick="javascript:window.history.back();" value="返 回">
        <el-dialog title="薪资基本明细"
                   :visible.sync="dialogFormVisible"
                   v-on:open="open()">
            <div id="main" style="width: 600px;height:400px;"></div>
        </el-dialog>
    </div>
</body>
</html>
<script type="text/javascript">
    var vm = new Vue({
        el: "#app",
        data: {
            ssid:@Html.Raw(Json.Encode(@ViewBag.ssid)),
            sgid:@Html.Raw(Json.Encode(@ViewBag.sgid)),
            time:@Html.Raw(Json.Encode(@ViewBag.time)),
            SGDList: [],
            //薪资详细
            SSDList: [],
            name: localStorage.getItem("uname"),
            smoney: 0,
            xmoney: 0,
            leve: "",
            dialogFormVisible: false,
        },
        methods: {
            find: function () {
                axios.get("check_sgdFind", {
                    params: {
                        sgid: this.sgid,
                    }
                }).then(res => {
                    this.SGDList = res.data;
                    for (var i = 0; i < this.SGDList.length; i++) {
                        this.smoney += Number(this.SGDList[i].salary_paid_sum);
                        this.xmoney += Number(this.SGDList[i].salary_standard_sum);
                    }
                }).catch(err => {
                    console.log(err);
                })
                axios.get("FindLeve", {
                    params: {
                        sgid: this.sgid
                    }
                }).then(res => {
                    this.leve = res.data;
                }).catch(err => {
                    console.log(err);
                })
            },
            CKSSD: function () {
                //
                this.dialogFormVisible = true;
            },
            qx: function () {
                this.dialogFormVisible = false;
            },
            bt: function () {
                axios.get("FindssdSSid", {
                    params: {
                        ssid: this.ssid
                    }
                }).then(res => {
                    this.SSDList = res.data;
           
                }).catch(err => {
                    console.log(err);
                })

                let btlist = [];
                for (var i = 0; i < this.SSDList.length; i++) {
                    btlist.push({ value: this.SSDList[i].salary, name: this.SSDList[i].item_name });

                }
                console.log(btlist);
                var myChart = echarts.init(document.getElementById('main'));
                var option = {
                    series: [
                        {
                            type: 'pie',   
                            radius: '55%',
                            data: btlist,
                            label: {
                                show: true,
                                formatter: '{b}: {c}元'
                            }
                        }
                    ]
                };
                myChart.setOption(option);
            },
            open() {
                const t = this;
                setTimeout(() => {
                    //  执行echarts画图方法
                    t.bt();
                }, 0);
            }
        }
        ,
        mounted: function () {
            this.find();
            this.bt();
        },
        filters: {
            ftime: function (value) {
                if (value == '/Date(-62135596800000)/') {
                    return '空'
                }
                var dt = new Date(parseInt(value.replace("/Date(", "").replace(")/", ""), 10));
                return dt.getFullYear() + "-" + (dt.getMonth() + 1) + "-" + dt.getDate();
            }
        }
    })
</script>